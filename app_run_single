#!/bin/bash
echo -e "\e[34mstarting\e[0m"
echo "==============================================================================================================================================================================="
echo "       ::::::::   :::::::::::      :::    :::       :::::::::       :::::::::::       ::::::::        ::::::::       ::::::::       ::::::::       ::::    :::       :::::::: ";
echo "     :+:    :+:      :+:          :+:    :+:       :+:    :+:          :+:          :+:    :+:      :+:    :+:     :+:    :+:     :+:    :+:      :+:+:   :+:      :+:    :+: ";
echo "    +:+             +:+          +:+    +:+       +:+    +:+          +:+          +:+    +:+      +:+            +:+            +:+             :+:+:+  +:+      +:+ ";
echo "   +#++:++#++      +#+          +#+    +:+       +#+    +:+          +#+          +#+    +:+      +#+            +#++:++#++     :#:             +#+ +:+ +#+      +#++:++#++ ";
echo "         +#+      +#+          +#+    +#+       +#+    +#+          +#+          +#+    +#+      +#+                   +#+     +#+   +#+#      +#+  +#+#+#             +#+ ";
echo " #+#    #+#      #+#          #+#    #+#       #+#    #+#          #+#          #+#    #+#      #+#    #+#     #+#    #+#     #+#    #+#      #+#   #+#+#      #+#    #+# ";
echo " ########       ###           ########        #########       ###########       ########        ########       ########       ########       ###    ####       ######## ";
echo "==========================================================================================================================================================================="
echo ""
echo ""
echo ""
echo "====Log Start===="
# ===== CONFIG =====
LOG_DIR="logs"
PID_FILE="gunicorn.pid"
TIMESTAMP=$(date +"%Y%m%d_%H%M%S")
LOGFILE="$LOG_DIR/server_$TIMESTAMP.log"
# ==================

# Colors
GREEN="\e[32m"
RED="\e[31m"
YELLOW="\e[33m"
BLUE="\e[34m"
NC="\e[0m" # No Color

mkdir -p "$LOG_DIR"

# 기본 옵션들
BACKGROUND=false
KILL=false
HELP=false
SILENT=false
STATUS=false

# 도움말 출력 함수
show_help() {
    echo -e "${YELLOW}Usage: $0 [options]${NC}"
    echo "Options:"
    echo "  -b, --background    Run the server in the background"
    echo "  -kill, --kill       Kill the background server if running"
    echo "  -s, --silent        Run the server in foreground without debug/access logs (only info+)"
    echo "  -status, --status   Check if the server is running"
    echo "  -h, --help          Show this help message"
}

# 인자 파싱
for arg in "$@"
do
    case $arg in
        -b|--background)
        BACKGROUND=true
        shift
        ;;
        -kill|--kill)
        KILL=true
        shift
        ;;
        -s|--silent)
        SILENT=true
        shift
        ;;
        -status|--status)
        STATUS=true
        shift
        ;;
        -h|--help)
        HELP=true
        shift
        ;;
        *)
        echo -e "${RED}Invalid option: $arg${NC}"
        show_help
        exit 1
        ;;
    esac
done

# 도움말 출력
if $HELP; then
    show_help
    exit 0
fi

# 상태 확인
if $STATUS; then
    if [ -f "$PID_FILE" ]; then
        PID=$(cat "$PID_FILE")
        if ps -p "$PID" > /dev/null; then
            echo -e "${GREEN}Gunicorn is running with PID $PID${NC}"
        else
            echo -e "${YELLOW}PID file exists, but no process found. Cleaning up...${NC}"
            rm "$PID_FILE"
        fi
    else
        echo -e "${RED}Gunicorn is not running.${NC}"
    fi
    exit 0
fi

# 프로세스 종료 처리
if $KILL; then
    if [ -f "$PID_FILE" ]; then
        PID=$(cat "$PID_FILE")
        echo -e "${YELLOW}Killing Gunicorn process with PID: $PID${NC}"
        kill "$PID"
        rm "$PID_FILE"
        echo -e "${GREEN}Gunicorn stopped.${NC}"
    else
        echo -e "${RED}No PID file found. Is the server running in background?${NC}"
    fi
    exit 0
fi

# Ctrl+C 처리
cleanup() {
    echo -e "${YELLOW}Stopping Gunicorn...${NC}"
    if [ -f "$PID_FILE" ]; then
        PID=$(cat "$PID_FILE")
        kill "$PID"
        rm "$PID_FILE"
        echo -e "${GREEN}Gunicorn stopped.${NC}"
    fi
    exit 0
}
trap cleanup SIGINT

# 서버 실행
if $BACKGROUND; then
    echo -e "${BLUE}Starting Gunicorn in background mode...${NC}"
    gunicorn --workers 1 --bind 127.0.0.1:8000 wsgi:app \
        --access-logfile "$LOG_DIR/access_$TIMESTAMP.log" \
        --error-logfile "$LOG_DIR/error_$TIMESTAMP.log" \
        --log-level info \
        --daemon \
        --pid "$PID_FILE"
    echo -e "${GREEN}Gunicorn started with PID $(cat $PID_FILE)${NC}"
elif $SILENT; then
    echo -e "${BLUE}Starting Gunicorn in foreground (silent mode: only info+, no access log)...${NC}"
    gunicorn --workers 1 --bind 127.0.0.1:8000 wsgi:app \
        --access-logfile /dev/null \
        --error-logfile - \
        --log-level info 2>&1 | tee "$LOGFILE"
else
    echo -e "${BLUE}Starting Gunicorn in foreground (logs saved to $LOGFILE)...${NC}"
    gunicorn --workers 1 --bind 127.0.0.1:8000 wsgi:app \
        --access-logfile - \
        --error-logfile - \
        --log-level debug 2>&1 | tee "$LOGFILE"
fi
